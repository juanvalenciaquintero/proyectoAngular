{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/paliativos/paliativos.component.css","webpack:///./src/app/components/paliativos/paliativos.component.html","webpack:///./src/app/components/paliativos/paliativos.component.ts","webpack:///./src/app/services/task.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-paliativos></app-paliativos>\\n\"","import { Component } from '@angular/core';\nimport { TaskService } from './services/task.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'proyect';\n\n  constructor(\n    private taskService: TaskService\n  )\n  { }\n\n  getAllTasks()\n  {\n    this.taskService.getAllTasks()\n      .subscribe(todos =>\n      {\n        console.log(todos)\n      })\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { PaliativosComponent } from './components/paliativos/paliativos.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PaliativosComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFsaWF0aXZvcy9wYWxpYXRpdm9zLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<ul class=\\\"pacientes\\\">\\n  <li *ngFor=\\\"let paciente of pacientes\\\">\\n    <a routerLink=\\\"\\\">\\n      <span >{{ paciente.id }}</span> {{ paciente.nuhsa }}\\n    </a>\\n  </li>\\n</ul>\\n\"","import { Task } from './../../interfaces/task';\nimport { TaskService } from './../../services/task.service';\n\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-paliativos',\n  templateUrl: './paliativos.component.html',\n  styleUrls: ['./paliativos.component.css']\n})\nexport class PaliativosComponent implements OnInit {\n\n  pacientes: Task[];\n  constructor(private taskService:TaskService) { }\n\n  ngOnInit()\n  {\n    this.getAllTasks();\n  }\n\n  getAllTasks(): void\n  {\n    this.taskService.getAllTasks()\n    .subscribe(pacientes => this.pacientes = pacientes);\n    console.log('pacientes:' + this.pacientes);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Task } from './../interfaces/task';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  private cadena: string;\n  constructor(private http: HttpClient) { }\n\n  getAllTasks(): Observable<Task[]>\n  {\n    const path = 'http://estadisticas.x10host.com/todos.php?valor=1';\n    //const path = 'https://jsonplaceholder.typicode.com/todos';\n    //const path = 'http://estadisticas.x10host.com/todos';\n    let headers = new HttpHeaders().set('Content-Type','application/x-www-form-urlencoded');\n    return this.http.get<Task[]>(path,{headers:headers});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}